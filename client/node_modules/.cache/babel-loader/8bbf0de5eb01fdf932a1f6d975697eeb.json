{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrecarvalho/Desktop/projectos/expense-tracker/backend/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Initial state\n\nconst initialState = {\n  transactions: []\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {}\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/alexandrecarvalho/Desktop/projectos/expense-tracker/backend/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","deleteTransaction","id","type","payload","addTransaction","transaction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE;AADK,CAArB,C,CAIA;;AACA,OAAO,MAAMC,aAAa,GAAGN,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMG,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;;AACA,iBAAeO,eAAf,GAAgC,CAE/B;;AAED,WAASC,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID;;AAED,WAASG,cAAT,CAAwBC,WAAxB,EAAqC;AACnCP,IAAAA,QAAQ,CAAC;AACPI,MAAAA,IAAI,EAAE,iBADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID;;AAED,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACrCZ,MAAAA,YAAY,EAAEI,KAAK,CAACJ,YADiB;AAErCO,MAAAA,iBAFqC;AAGrCI,MAAAA;AAHqC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKLR,QALK,CAAR;AAOD,CA7BM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n// Initial state\nconst initialState = {\n  transactions: []\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions(){\n\n  }\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: 'ADD_TRANSACTION',\n      payload: transaction\n    });\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}