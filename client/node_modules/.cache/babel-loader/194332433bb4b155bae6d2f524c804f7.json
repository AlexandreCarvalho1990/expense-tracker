{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrecarvalho/Desktop/projectos/expense-tracker/client/src/context/GlobalState.js\";\nimport React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios'; // Initial state\n\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create context\n\nexport const GlobalContext = createContext(initialState); // Provider component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState); // Actions\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get('/api/v0/transactions');\n      dispatch({\n        type: 'GET_TRANSACTIONS',\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRASACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function deleteTransaction(id) {\n    try {\n      const res = await axios.delete(`/api/v0/transactions/${id}`);\n      dispatch({\n        type: 'DELETE_TRANSACTION',\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRASACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/v0/transactions/', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: transaction\n      });\n    } catch (err) {\n      dispatch({\n        type: 'TRASACTION_ERROR',\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/alexandrecarvalho/Desktop/projectos/expense-tracker/client/src/context/GlobalState.js"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","delete","addTransaction","transaction","config","headers","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB,C,CAMA;;AACA,OAAO,MAAMC,aAAa,GAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AACA,OAAO,MAAMK,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD8C,CAG9C;;AACA,iBAAeS,eAAf,GAAgC;AAC5B,QAAG;AACD,YAAMC,GAAG,GAAE,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAjB;AACAH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAMC,GAAN,EAAW;AACXP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAID;AACJ;;AAEF,iBAAee,iBAAf,CAAiCC,EAAjC,EAAqC;AACnC,QAAG;AACF,YAAMR,GAAG,GAAE,MAAMX,KAAK,CAACoB,MAAN,CAAc,wBAAuBD,EAAG,EAAxC,CAAjB;AACAV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,oBADC;AAEPC,QAAAA,OAAO,EAAEK;AAFF,OAAD,CAAR;AAIA,KAND,CAME,OAAMH,GAAN,EAAU;AACXP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAIA;AACD;;AAED,iBAAekB,cAAf,CAA8BC,WAA9B,EAA2C;AACzC,UAAMC,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;;AAKA,QAAG;AACD,YAAMb,GAAG,GAAE,MAAMX,KAAK,CAACyB,IAAN,CAAW,uBAAX,EAAoCH,WAApC,EAAiDC,MAAjD,CAAjB;AACAd,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,iBADC;AAEPC,QAAAA,OAAO,EAAEQ;AAFF,OAAD,CAAR;AAIA,KANF,CAMG,OAAMN,GAAN,EAAU;AACXP,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAE,kBADC;AAEPC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFpB,OAAD,CAAR;AAIA;AACH;;AAED,sBAAQ,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AACrCD,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADiB;AAErCC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFwB;AAGrCC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHsB;AAIrCM,MAAAA,eAJqC;AAKrCQ,MAAAA,iBALqC;AAMrCG,MAAAA;AANqC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQLd,QARK,CAAR;AAUD,CAhEM","sourcesContent":["import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\nimport axios from 'axios';\n// Initial state\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}\n\n// Create context\nexport const GlobalContext = createContext(initialState);\n\n// Provider component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  // Actions\n  async function getTransactions(){\n      try{\n        const res= await axios.get('/api/v0/transactions');\n        dispatch({\n          type: 'GET_TRANSACTIONS',\n          payload: res.data.data\n        });\n      } catch(err) {\n        dispatch({\n          type: 'TRASACTION_ERROR',\n          payload: err.response.data.error\n        });\n      }\n  }\n\n async function deleteTransaction(id) {\n   try{\n    const res= await axios.delete(`/api/v0/transactions/${id}`);\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n   } catch(err){\n    dispatch({\n      type: 'TRASACTION_ERROR',\n      payload: err.response.data.error\n    });\n   }\n  }\n\n  async function addTransaction(transaction) {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n    try{\n      const res= await axios.post('/api/v0/transactions/', transaction, config);\n      dispatch({\n        type: 'ADD_TRANSACTION',\n        payload: transaction\n      });\n     } catch(err){\n      dispatch({\n        type: 'TRASACTION_ERROR',\n        payload: err.response.data.error\n      });\n     }\n  }\n\n  return (<GlobalContext.Provider value={{\n    transactions: state.transactions,\n    error: state.error,\n    loading: state.loading,\n    getTransactions,\n    deleteTransaction,\n    addTransaction\n  }}>\n    {children}\n  </GlobalContext.Provider>);\n}"]},"metadata":{},"sourceType":"module"}